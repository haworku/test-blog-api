openapi: 3.0.0
info:
  version: 1.0.0
  title: Blog API
  description: A test blog api

# USERS
paths:
  /users:
    get:
      description: List all users
      responses:
        "200":
          description: An array of users
          content:
          application/json:
            type: array
            items:
              $ref: "#/components/schemas/User"

        "400":
          description: Invalid request
          $ref: "#/components/schemas/Error"
        default:
          description: Something has gone wrong
          $ref: "#/components/schemas/Error"
    post:
      summary: Create a new username
      tags:
        - users
      parameters:
        - name: username
          in: path
          required: true
          schema:
          type: string
      requestBody:
        required: true
        content:
          application/json:
            $ref: "#/components/schemas/User"
      responses:
        "200":
          description: Sucessfully created new user
          content:
          application/json:
            $ref: "#/components/schemas/User"

        "400":
          description: Invalid request
          $ref: "#/components/schemas/Error"
        default:
          description: Something has gone wrong
          $ref: "#/components/schemas/Error"

  /users/{userId}:
    get:
      summary: List single user by id
      tags:
        - users
      parameters:
        - name: _id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          summary: A single user
          content:
          application/json:
            $ref: "#/components/schemas/User"

        "400":
          summary: Invalid request
          $ref: "#/components/schemas/Error"
        "404":
        summary: Invalid request
        $ref: "#/components/schemas/404Error"
        default:
          summary: Something has gone wrong
          $ref: "#/components/schemas/Error"

  patch:
    summary: Update a single user by id
    tags:
      - users
    parameters:
      - name: username
        in: path
        required: true
        schema:
          type: string
    requestBody:
      required: true
      content:
        application/json:
          $ref: "#/components/schemas/User"
    responses:
      "201":
        summary: Updated user
        content:
        application/json:
          $ref: "#/components/schemas/User"

      "400":
        summary: Invalid request
        $ref: "#/components/schemas/Error"
      "404":
        summary: Invalid request
        $ref: "#/components/schemas/404Error"
      default:
        summary: Something has gone wrong
        $ref: "#/components/schemas/Error"

  delete:
    summary: Delete a single user by id
    tags:
      - users
    parameters:
      - name: username
        in: path
        required: true
        schema:
          type: string
    responses:
      "204":
        summary: Successfully deleted

      "400":
        summary: Invalid request
        $ref: "#/components/schemas/Error"
      "404":
        summary: Invalid request
        $ref: "#/components/schemas/404Error"
      default:
        summary: Something has gone wrong
        $ref: "#/components/schemas/Error"

components:
  schemas:
    User:
      type: object
      required:
        - username
      properties:
        username:
          type: string
          required: true,
        age:
          type: integer
        createdOn:
          type: date-time
        _id:
          "type": "string"

    Error:
      description: Invalid Request
      required:
        - code
        - message
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string

    404Error:
      description: Not Found
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
